#if !defined(_VPOP10_)
#  define _VPOP10_

class model_data : public ad_comm{
  ofstream *   pad_report1;
  ofstream *   pad_tmp;
  data_int debug;
  data_int first_year;
  data_int last_year;
  data_int first_age;
  data_int last_age;
  data_int first_length;
  data_int length_inc;
  data_int N_lens;
  data_int N_sexes;
  data_int Flength;
  data_int fminbins;
  data_int fmaxbins;
  data_int mminbins;
  data_int mmaxbins;
  data_int fminbins2;
  data_int fmaxbins2;
  data_int mminbins2;
  data_int mmaxbins2;
  data_int fminbins3;
  data_int fmaxbins3;
  data_int mminbins3;
  data_int mmaxbins3;
  data_int Frecyr;
  data_number Minit;
  data_int Mopt;
  data_int N1opt;
  data_vector N1_prior;
  data_vector year1;
  data_vector start_Z_prior;
  data_vector age1_prior;
  data_vector R0_prior;
  data_vector beta_prior;
  data_vector alpha_prior;
  data_vector p1_prior;
  data_vector p2_prior;
  data_vector p3_prior;
  data_vector log_RecDev_prior;
  data_vector M_prior;
  data_int ll_select_switch;
  data_vector old_summer_rv_Sfull_prior;
  data_vector old_summer_rv_varLest_prior;
  data_vector old_summer_rv_varRest_prior;
  data_matrix halibut_fixed_Sfull_prior;
  data_matrix halibut_fixed_varLest_prior;
  data_matrix ll_Sfull_prior;
  data_matrix ll_varLest_prior;
  data_vector ot_Sfull_prior;
  data_vector ot_varLest_prior;
  data_vector ot_varRest_prior;
  data_vector log_q_old_summer_rv_prior;
  data_vector log_q_halibut_fixed_prior;
  data_vector u_ll_prior;
  data_vector like_weight;
  data_int N_catlen_commercial;
  data_int N_catlen_surveys;
  data_ivector catlen_LikeType;
  data_int maxssizes;
  data_vector bi;
  data_vector bii;
  data_vector linf;
  data_vector k;
  data_vector t0;
  data_vector sigma_a;
  data_vector sigma_b;
  data_vector matage;
  data_vector mat_a;
  data_vector mat_b;
  data_int summer_rv_n_years;
  data_vector summer_rv_years;
  data_vector summer_rv_total;
  data_int halibut_fixed_n_years;
  data_vector halibut_fixed_years;
  data_vector halibut_fixed_total;
  data_vector halibut_fixed_matureF;
  data_int N_catlen_rv;
  data_matrix obs_catlen_rv;
  data_vector Canada;
  data_vector Foreign;
  data_vector Total;
  data_vector ll_F;
  data_vector ll_M;
  data_vector ot;
  data_int comm_total_n_years;
  data_vector comm_total_years;
  data_vector comm_total;
  data_int N_lens_comm;
  data_int N_catlen_comm;
  data_matrix obs_catlen_comm;
  data_int pva_horizon;
  data_int length_mort_vec;
  data_vector mort_vec;
  data_matrix lenatage;
  data_vector F_sigma;
  data_vector M_sigma;
  data_int dud;
  dmatrix w;
  dmatrix obs_catlenP_rv;
  dmatrix out_obs_catlen_rv;
  dmatrix obs_catlenP_comm;
  dmatrix out_obs_catlen_comm;
  dmatrix mat;
  double pi;
  double lb;
  double ub;
  double annualsigma;
  double biasRannual;
  double maxs;
  int age;
  int sex;
  int year;
  int i;
  int j;
  int phz;
  int obs;
  int series;
  int newmax;
  int srows;
  dmatrix F_agelen;
  dmatrix M_agelen;
  dmatrix F_agelen_comm;
  dmatrix M_agelen_comm;
  dmatrix F_lenage;
  dmatrix M_lenage;
  dmatrix F_lenage_comm;
  dmatrix M_lenage_comm;
  dvector lens;
  dvector lens_comm;
  dvector ages;
  dvector years;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_number dummy;
  param_init_bounded_number N1;
  param_init_bounded_number start_Z;
  param_init_bounded_vector age1;
  param_init_bounded_number R0;
  param_init_bounded_number beta;
  param_init_bounded_number alpha;
  param_init_bounded_number p1;
  param_init_bounded_number p2;
  param_init_bounded_number p3;
  param_init_bounded_number M;
  param_init_bounded_vector log_RecDev;
  param_vector all_log_RecDev;
  param_init_bounded_number old_summer_rv_Sfull;
  param_init_bounded_number old_summer_rv_varLest;
  param_init_bounded_number old_summer_rv_varRest;
  param_init_bounded_number halibut_fixed_Sfull_F;
  param_init_bounded_number halibut_fixed_varLest_F;
  param_init_bounded_number halibut_fixed_Sfull_M;
  param_init_bounded_number halibut_fixed_varLest_M;
  param_init_bounded_number ll_Sfull_F;
  param_init_bounded_number ll_varLest_F;
  param_init_bounded_number ll_Sfull_M;
  param_init_bounded_number ll_varLest_M;
  param_init_bounded_number ot_Sfull;
  param_init_bounded_number ot_varLest;
  param_init_bounded_number ot_varRest;
  param_init_bounded_number log_q_old_summer_rv;
  param_init_bounded_number log_q_halibut_fixed;
  param_init_bounded_number u_ll_2003;
  param_vector summer_rv_resid;
  param_vector halibut_fixed_resid;
  param_vector sex_rat_rv_resid;
  param_vector sex_rat_comm_resid;
  param_matrix pred_catlen_rv;
  param_matrix pred_catlenP_rv;
  param_matrix pred_catlen_comm;
  param_matrix pred_catlenP_comm;
  param_matrix catlen_survey_resid;
  param_matrix catlen_comm_resid;
  param_matrix catlen_comm_kernal_resid;
  param_matrix catlen_survey_kernal_resid;
  param_matrix Females;
  param_matrix Males;
  param_stddev_vector naa2009;
  param_vector Total_N;
  param_vector Total_W;
  param_vector Total_F;
  param_vector Total_M;
  param_vector SSN;
  param_vector SSN2;
  param_vector SSB;
  param_stddev_vector SSB2;
  param_stddev_number SSB2009;
  param_stddev_number FF2009;
  param_stddev_number FM2009;
  param_vector rec;
  param_vector dudfem;
  param_vector dudmale;
  param_matrix surv;
  param_matrix surv50;
  param_matrix surv25;
  param_matrix surv75;
  param_vector w_F;
  param_vector pred_summer_rv_total;
  param_vector pred_halibut_fixed_total;
  param_matrix summer_RVage;
  param_matrix halibut_fixed_age;
  param_vector VB_Canada;
  param_vector VB_Foreign;
  param_vector VB_ll;
  param_vector VB_ot;
  param_vector TB_Canada;
  param_vector TB_Foreign;
  param_vector TB_ll;
  param_vector TB_ot;
  param_vector C_ll_F;
  param_vector C_ll_M;
  param_vector C_ot;
  param_vector u_Canada;
  param_vector u_Foreign;
  param_vector u_ll;
  param_number u_ll_pdf;
  param_vector u_ot;
  param_stddev_vector u_ll_F;
  param_vector u_ll_M;
  param_vector old_summer_rv_F_sel;
  param_vector old_summer_rv_M_sel;
  param_vector halibut_fixed_F_sel;
  param_vector halibut_fixed_M_sel;
  param_vector ll_F_sel;
  param_vector ll_M_sel;
  param_vector ot_F_sel;
  param_vector ot_M_sel;
  param_number varL;
  param_number varR;
  param_number Sfull;
  param_matrix F_utotal;
  param_matrix M_utotal;
  param_matrix F_ucatch;
  param_matrix M_ucatch;
  param_3array prop_landed;
  param_3array prop_fmort;
  param_number S0;
  param_number summer_rv_like;
  param_number halibut_fixed_like;
  param_vector catlen_survey_like;
  param_vector catlen_comm_like;
  param_vector catlen_survey_kernal_like;
  param_vector catlen_comm_kernal_like;
  param_number fpen;
  param_number ffpen;
  param_number upen;
  param_number reccheck;
  param_number recpen;
  param_number recpen2;
  param_number r_penF;
  param_number alphapen;
  param_number age1_pen;
  param_number age1_last_year_pdf;
  param_number recdiff_pdf;
  param_number recdiff_sigma;
  param_number temp1;
  param_number gm;
  param_matrix pred_f;
  param_matrix pred_m;
  param_matrix pred_f_comm;
  param_matrix pred_m_comm;
  param_matrix pred_sex_rat;
  param_matrix pred_sex_rat_comm;
  param_vector fcomp;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value ofv;
  param_number SPRF0;
  param_number ssbeq;
  param_number receq;
  param_matrix obs_catlen_rv_short;
  param_matrix pred_catlen_rv_short;
  param_matrix obs_catlen_ll_short_female;
  param_matrix pred_catlen_ll_short_female;
  param_matrix obs_catlen_ll_short_male;
  param_matrix pred_catlen_ll_short_male;
  param_matrix obs_catlen_ot_short;
  param_matrix pred_catlen_ot_short;
  param_matrix obs_catlen_hsurvey_short_female;
  param_matrix pred_catlen_hsurvey_short_female;
  param_matrix obs_catlen_hsurvey_short_male;
  param_matrix pred_catlen_hsurvey_short_male;
  param_matrix obs_catlen_hCI_short_female;
  param_matrix pred_catlen_hCI_short_female;
  param_matrix obs_catlen_hCI_short_male;
  param_matrix pred_catlen_hCI_short_male;
public:
  virtual void userfunction(void);
  virtual void report(void);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void initialize_parameters(void);
  void setup_fixed_parameters(void);
  void setup_variable_parameters(void);
  void initial_conditions(void);
  void dynamics(void);
  void Summer_RV_Likelihood(void);
  void Halibut_Fixed_Likelihood(void);
  void Catlen_Comm_Likelihood(void);
  void Catlen_Survey_Likelihood(void);
  void MCWrite(void);
 dvariable GetF_forward(const dvariable& N, const dvariable& C, const dvariable& M);
 dvariable ffromcn(const dvariable& N, const dvariable& C, const dvariable& M);
 dvar_vector Make_select_dhn(int minage, int maxage, dvariable full, dvariable varL, dvariable varR);
 dvar_vector Make_select_logistic(int minage, int maxage, dvariable full, dvariable varL);
  void Age1_pen(void);
  void Age1_last_year_pdf(void);
  void Recdiff_pdf(void);
 dvariable LogNormal_LogLike(dvar_vector observed, dvar_vector predicted, double len,double sigma, double type);
 dvariable LogNormal_LogLike(dvar_vector observed, dvar_vector predicted, double len,double sigma, double type,dvar_vector resid);
 dvariable calc_sigma(dvar_vector observed, dvar_vector predicted, double len);
 dvariable Normal(dvariable observed,dvariable mean,double nsigma);
 dvariable Binomial(dvariable observed,double x,double n);
 dvariable negfun(const dvariable&x,const double eps,dvariable& pen);
 dvariable Multinomial(dvar_vector obs,dvar_vector pred,data_int& a,double& b,int& Ltype,dvar_vector resid);
 dvariable Multifan(dvector& obs,dvar_vector& pred,int a,double& b,int Ltype);

};
#endif
